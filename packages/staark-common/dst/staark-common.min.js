var R=function(t){return Array.isArray(t)?t:[t]};var g="[]",S=t=>{t.multiple&&t.name&&!t.name.endsWith(g)&&(t.name+=g)};var C=t=>{if(typeof t=="object")if(Array.isArray(t)){let e=[];for(let o=0;o<t.length;o++)e.push(C(t[o]));t=e}else{let e={};for(let o in t)e[o]=C(t[o]);t=e}return t};var T=(t,e)=>{if(t===e)return!0;if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(!t||!e||typeof t!="object"&&typeof e!="object")return t===e;if(t==null||e===null||e===void 0||t.prototype!==e.prototype)return!1;let o=Object.keys(t);return o.length!==Object.keys(e).length?!1:o.every(n=>T(t[n],e[n]))};var d=Symbol();var a=(t,e,o)=>((typeof e!="object"||e._===d||Array.isArray(e))&&(o=e,e=void 0),{_:d,a:e,c:o?Array.isArray(o)?o:[o]:[],t:t.toUpperCase()});var A=t=>{var n;if(t instanceof Text)return(n=t.textContent)!=null?n:"";let e={};for(let i=0;i<t.attributes.length;i++){let c=t.attributes[i];e[c.name]=c.value}let o=[];for(let i=0;i<t.childNodes.length;i++)o.push(A(t.childNodes[i]));return a(t.nodeName,e,o)},q=t=>{let e=[];for(let o=0;o<t.childNodes.length;o++)e.push(A(t.childNodes[o]));return e};var X=new Proxy({},{get:(t,e)=>{if(t[e])return t[e];let o=(e[0]+e.substring(1).replace(/([A-Z])/g,n=>"-"+n)).toUpperCase();return t[e]=(n,i)=>a(o,n,i)}});var x="]",h="[",F=".",_="=",E="#",m="'",u='"';var y=t=>{let e=t.length,o=0,n="",i={},c="",s=!0,p=3,f=()=>{if(c){switch(p){case 0:i[c]=s===!0?!0:s,s=!0;break;case 1:if(!i.class){i.class=c;break}i.class+=" "+c;break;case 2:i.id=c;break;case 3:n=c;break}c=""}},r,b,k=()=>{for(b=0;o<e;){if(r=t[o],o++,r===_){s="",r=t[o];let N=r===u,l=r===m;for((N||l)&&(s+=r,o++);o<e;){if(r=t[o],N&&r===u||l&&r===m){s+=r,o++;break}else if(!N&&!l&&r===x)break;s+=r,o++}for((s[0]===u&&s[s.length-1]===u||s[0]===m&&s[s.length-1]===m)&&(s=s.substring(1,s.length-1));o<e&&(r=t[o],o++,r!==x););break}else if(r===h){b++;continue}else if(r===x){if(b--,b<0)break;continue}c+=r}f()};for(;o<e;){if(r=t[o],o++,r===E){f(),p=2;continue}else if(r===F){f(),p=1;continue}else if(r===h){f(),p=0,k();continue}c+=r}return[n,i]};var et=new Proxy({},{get:(t,e)=>{if(t[e])return t[e];let o=(e[0]+e.substring(1).replace(/([A-Z])/g,n=>"-"+n)).toUpperCase();return t[e]=(n,i)=>{let c;if(n){let[s,p]=y(n);c=p}return a(o,c,i)}}});var M=0,rt=()=>"-"+M++;var st=(t,e)=>({_:d,r:t,m:e});var at=(t,e)=>{let[o,n]=y(t);return{_:d,a:n,c:e?Array.isArray(e)?e:[e]:[],t:o.toUpperCase()}};var mt=t=>({_:d,c:Array.isArray(t)?t.join(""):""+t});export{R as arrayify,q as childrenToNodes,C as cloneRecursive,T as equalRecursive,X as factory,et as fctory,d as marker,st as memo,at as nde,a as node,S as suffixNameIfMultiple,mt as text,A as toNode,rt as uniqueIdentifier};
//# sourceMappingURL=staark-common.min.js.map
