var s=(t,n,e)=>{let i=t;for(let r=0;r<n.length-1;r++){let o=n[r];o in i||(i[o]={}),i=i[o]}i[n[n.length-1]]=structuredClone(e)},c=(t,n)=>{let e=t;for(let i=0;i<n.length-1;i++)if(e=e[n[i]],!e)return;Array.isArray(e)?e.splice(parseInt(n[n.length-1]),1):delete e[n[n.length-1]]},u=(t,n,e=[])=>{let i=[];for(let r in t){let o=[...e,r];r in n?typeof t[r]=="object"&&typeof n[r]=="object"?i.unshift(...u(t[r],n[r],o)):t[r]!==n[r]&&i.unshift({type:"set",path:o,old:structuredClone(t[r]),new:structuredClone(n[r])}):i.unshift({type:"delete",path:o,old:structuredClone(t[r])})}for(let r in n)r in t||i.unshift({type:"set",path:[...e,r],new:structuredClone(n[r])});return i},f=(t,n)=>{for(let e of n)e.type==="set"?s(t,e.path,e.new):e.type==="delete"&&c(t,e.path);return t},g=(t,n)=>{for(let e of n)e.type==="set"?e.old===void 0?c(t,e.path):s(t,e.path,e.old):e.type==="delete"&&s(t,e.path,e.old);return t};var h=function(t,n){t=structuredClone(t),n=Object.assign({maximumHistory:50},n);let e=[],i=[];return{get:()=>structuredClone(t),set:r=>{r=structuredClone(r);let o=u(t,r);if(o.length>0){if(e.push(o),n.maximumHistory&&e.length>n.maximumHistory)for(let l=e.length-n.maximumHistory;l>0;l--)e.shift();i.splice(0)}return t=r,structuredClone(t)},undo:()=>{if(e.length>0){let r=e.pop();if(r){if(i.push(r),n.maximumHistory&&i.length>n.maximumHistory)for(let o=i.length-n.maximumHistory;o>0;o--)i.shift();t=g(t,r)}}return structuredClone(t)},redo:()=>{if(i.length>0){let r=i.pop();if(r){if(e.push(r),n.maximumHistory&&e.length>n.maximumHistory)for(let o=e.length-n.maximumHistory;o>0;o--)e.shift();t=f(t,r)}}return structuredClone(t)}}};export{f as applyDiff,u as determineDiff,h as manageState,g as revertDiff};
//# sourceMappingURL=tiedliene.min.js.map
