var s=t=>{if(typeof t=="object"){let n=Array.isArray(t)?[]:{};for(let e in t)n[e]=s(t[e]);return n}return t};var c=(t,n,e)=>{let i=t;for(let o=0;o<n.length-1;o++){let r=n[o];r in i||(i[r]={}),i=i[r]}i[n[n.length-1]]=s(e)},l=(t,n)=>{let e=t;for(let i=0;i<n.length-1;i++)if(e=e[n[i]],!e)return;Array.isArray(e)?e.splice(parseInt(n[n.length-1]),1):delete e[n[n.length-1]]},f=(t,n,e=[])=>{let i=[];for(let o in t){let r=[...e,o];o in n?typeof t[o]=="object"&&typeof n[o]=="object"?i.unshift(...f(t[o],n[o],r)):t[o]!==n[o]&&i.unshift({type:"set",path:r,old:s(t[o]),new:s(n[o])}):i.unshift({type:"delete",path:r,old:s(t[o])})}for(let o in n)o in t||i.unshift({type:"set",path:[...e,o],new:s(n[o])});return i},h=(t,n)=>{for(let e of n)e.type==="set"?c(t,e.path,e.new):e.type==="delete"&&l(t,e.path);return t},u=(t,n)=>{for(let e of n)e.type==="set"?e.old===void 0?l(t,e.path):c(t,e.path,e.old):e.type==="delete"&&c(t,e.path,e.old);return t};export{h as applyDiff,f as determineDiff,u as revertDiff};
